name: Build and Release App

on:
  push:
    branches:
      - main
      - master
      
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]

    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      CSC_LINK: ${{ secrets.CSC_LINK }}
      CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
      APPLE_ID: ${{ secrets.APPLE_ID }}
      APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.APPLE_APP_SPECIFIC_PASSWORD }}
      APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js v22
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'yarn'

      - name: Install Yarn
        run: npm install -g yarn

      - name: Install Dependencies
        run: yarn install --frozen-lockfile --network-timeout 1000000
      
      - name: Copy Entitlements for macOS
        if: matrix.os == 'macos-latest'
        run: |
          mkdir -p build
          cp public/entitlements.mac.plist build/

      - name: Setup macOS Certificate
        if: matrix.os == 'macos-latest'
        run: |
          echo "$CSC_LINK" | base64 --decode > certificate.p12
          security create-keychain -p "" build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "" build.keychain
          security import certificate.p12 -k build.keychain -P "$CSC_KEY_PASSWORD" -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple: -s -k "" build.keychain

      - name: Package Application (Electron Builder)
        run: yarn dist

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.os }}
          path: |
            dist/
            !dist/**/*.map

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      actions: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download All Build Artifacts
        uses: actions/download-artifact@v4
        with:
          path: release-assets

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: release-assets/**/*
          tag_name: v${{ github.run_number }}
          name: Release v${{ github.run_number }}
          body: "Automated release from CI pipeline"
          draft: false
          prerelease: false